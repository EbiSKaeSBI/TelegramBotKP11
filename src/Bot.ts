import { Bot, session, Keyboard } from 'grammy';
import * as dotenv from "dotenv";
dotenv.config();

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã
import { processUserMessage } from './services/flowise-ai';
import { faqs, complaints, ADMINS, professionStories, userNames, userEmails, finishedComplaints, reviewedComplaints } from './constants';
import { SessionData, FAQ, Complaint, MyContext } from './types';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!process.env.TELEGRAM_BOT_TOKEN) {
    throw new Error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function mainMenu(isAdmin = false, userId?: number) {
    const kb = new Keyboard()
        .text("üìö –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞")
        .text("üå± –í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å")
        .row()
        .text("‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
        .text("‚úâÔ∏è –ñ–∞–ª–æ–±–∞/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
        .row()
        .text("üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è")
        .text("üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞");
    // –ö–Ω–æ–ø–∫–∞ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏ –§–ò–û, –∏ email
    if (userId && userNames[userId] && userEmails[userId]) {
        kb.row().text("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç");
    }
    if (isAdmin) {
        kb.row().text("üõ†Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å");
    }
    return kb.resized();
}

// –ü–æ–¥–º–µ–Ω—é –¥–ª—è –±–ª–æ–∫–∞ 1
function eduProcessMenu() {
    return new Keyboard()
        .text("üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        .row()
        .text("üìñ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º")
        .row()
        .text("üéì –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
        .row()
        .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        .resized();
}

// –ü–æ–¥–º–µ–Ω—é –¥–ª—è –±–ª–æ–∫–∞ 2
function upbringingMenu() {
    return new Keyboard()
        .text("üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è")
        .row()
        .text("ü§ù –í–Ω–µ—É—Ä–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å ¬´–ë—ã—Ç—å –≤–º–µ—Å—Ç–µ¬ª")
        .row()
        .text("üïäÔ∏è –°–ª—É–∂–±–∞ –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è")
        .row()
        .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        .resized();
}

// –ü–æ–¥–º–µ–Ω—é –¥–ª—è –±–ª–æ–∫–∞ 5
function profOrientationMenu() {
    return new Keyboard()
        .text("üó£Ô∏è –•–æ—á—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏")
        .row()
        .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        .resized();
}

// –ú–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
function parentCabinetMenu() {
    return new Keyboard()
        .text("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å email")
        .text("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û")
        .row()
        .text("üìÑ –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è")
        .row()
        .text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized();
}

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –±–æ—Ç–∞ —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
const bot = new Bot<MyContext>(process.env.TELEGRAM_BOT_TOKEN);

// –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏—è–º–∏
bot.use(session({
    initial: (): SessionData => ({
        isAdmin: false
    })
}));

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
bot.use(async (ctx, next) => {
    if (ctx.from?.id) {
        ctx.session.isAdmin = ADMINS.includes(ctx.from.id);
    }
    await next();
});

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function adminPanelMenu() {
    return new Keyboard()
        .text("üìã –ñ–∞–ª–æ–±—ã")
        .row()
        .text("‚ùì FAQ")
        .row()
        .text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        .row()
        .text("üì¨ –ò—Å—Ç–æ—Ä–∏–∏ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏")
        .row()
        .text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        .resized();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.command('start', async (ctx) => {
    // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –¥–∞–∂–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
    await ctx.reply(
        '–ü—Ä–∏–≤–µ—Ç! –Ø - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ö–æ–ª–ª–µ–¥–∂–∞ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞ ‚Ññ11. ' +
        '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å:',
        { reply_markup: mainMenu(ctx.session.isAdmin, ctx.from?.id) }
    );
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
bot.hears("üìö –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞", async (ctx) => {
    ctx.session.state = 'edu_process';
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:", { reply_markup: eduProcessMenu() });
});

bot.hears("üå± –í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å", async (ctx) => {
    ctx.session.state = 'upbringing';
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:", { reply_markup: upbringingMenu() });
});

bot.hears("üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è", async (ctx) => {
    ctx.session.state = 'prof_orientation';
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:", { reply_markup: profOrientationMenu() });
});

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ (—Ä–∞–∑–º–µ—â–∞—é –≤—ã—à–µ bot.on('message:text')) ---
bot.hears("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å email", async (ctx) => {
    ctx.session.state = "change_email";
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π email:", { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized() });
});

bot.hears("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û", async (ctx) => {
    ctx.session.state = "change_name";
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –§–ò–û:", { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized() });
});

bot.hears("üìÑ –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è", async (ctx) => {
    if (!ctx.from?.id) return;
    const userId = ctx.from.id;
    let message = '–í–∞—à–∏ –∂–∞–ª–æ–±—ã/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:\n\n';
    const myComplaints = [
        ...complaints.filter(c => c.userId === userId),
        ...reviewedComplaints.filter(c => c.userId === userId),
        ...finishedComplaints.filter(c => c.userId === userId)
    ];
    if (myComplaints.length === 0) message += '–ñ–∞–ª–æ–±/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç.';
    myComplaints.forEach(complaint => {
        let statusDisplay: string;
        if (complaint.status === 'closed') statusDisplay = '–∑–∞–≤–µ—Ä—à–µ–Ω–∞';
        else if (complaint.status === 'reviewed') statusDisplay = '—Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞';
        else statusDisplay = '–Ω–æ–≤–∞—è';
        message += `‚Ä¢ ${complaint.text}\n–°—Ç–∞—Ç—É—Å: ${statusDisplay}\n–î–∞—Ç–∞: ${complaint.date.toLocaleString()}\n\n`;
    });
    message += '\n–í–∞—à–∏ —Ä–∞—Å—Å–∫–∞–∑—ã –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:\n\n';
    const myStories = professionStories.filter(s => s.userId === userId);
    if (myStories.length === 0) message += '–†–∞—Å—Å–∫–∞–∑–æ–≤ –Ω–µ—Ç.';
    myStories.forEach(story => {
        message += `‚Ä¢ ${story.text}\n–°—Ç–∞—Ç—É—Å: ${story.status}\n–î–∞—Ç–∞: ${story.date.toLocaleString()}\n\n`;
    });
    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
    const chunkSize = 3500;
    for (let i = 0; i < message.length; i += chunkSize) {
        await ctx.reply(message.slice(i, i + chunkSize), { reply_markup: parentCabinetMenu() });
    }
    ctx.session.state = "parent_cabinet";
});

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ (—Ä–∞–∑–º–µ—â–∞—é –Ω–∏–∂–µ –≤—Å–µ—Ö –º–µ–Ω—é, –Ω–æ –≤—ã—à–µ catch-all) ---
bot.hears("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", async (ctx) => {
    ctx.session.state = "parent_cabinet";
    await ctx.reply("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:", { reply_markup: parentCabinetMenu() });
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ '‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã'
bot.hears("‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", async (ctx) => {
    ctx.session.state = undefined;
    const kb = new Keyboard();
    faqs.forEach(faq => kb.text(faq.question));
    kb.row().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é");
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:", { reply_markup: kb.resized() });
});

// –û—Ç–≤–µ—Ç –Ω–∞ FAQ
bot.hears(faqs.map(f => f.question), async (ctx) => {
    const faq = faqs.find(f => f.question === ctx.message?.text);
    if (faq) {
        // –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
        const kb = new Keyboard();
        faqs.forEach(faq => kb.text(faq.question));
        kb.row().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é");
        await ctx.reply(`–í–æ–ø—Ä–æ—Å: ${faq.question}\n–û—Ç–≤–µ—Ç: ${faq.answer}`, { reply_markup: kb.resized() });
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–º–µ–Ω—é –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
bot.hears("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", async (ctx) => {
    ctx.session.state = undefined;
    await ctx.reply("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", { reply_markup: mainMenu(ctx.session.isAdmin, ctx.from?.id) });
});

// –ü—Ä–∏–º–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–±–ª–æ–∫–æ–≤ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
bot.hears(["üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "üìñ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º", "üéì –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"], async (ctx) => {
    await ctx.reply(`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —Ä–∞–∑–¥–µ–ª—É: ${ctx.message?.text ?? ""}`, { reply_markup: eduProcessMenu() });
});

bot.hears("üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", async (ctx) => {
    const text = `
<b>–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</b>

<b>–ö–∞–∫–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —É —Ä–µ–±—ë–Ω–∫–∞?</b>
- –†–µ–∑–∫–∞—è —Å–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –≤ —Ö—É–¥—à—É—é —Å—Ç–æ—Ä–æ–Ω—É
- –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∞–ø–∞—Ç–∏—è –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –ª—é–±–∏–º—ã–º –∑–∞–Ω—è—Ç–∏—è–º
- –í—Å–ø—ã—à–∫–∏ –≥–Ω–µ–≤–∞ –∏ —è—Ä–æ—Å—Ç–∏
- –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å, —á–∞—Å—Ç—ã–µ –∫–æ—à–º–∞—Ä—ã
- –ü–æ—è–≤–ª–µ–Ω–∏–µ –Ω–µ–æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞—Ö–æ–≤ (—Ç–µ–º–Ω–æ—Ç–∞, –∂–∏–≤–æ—Ç–Ω—ã–µ –∏ –¥—Ä.)
- –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç—å –∫ –º–ª–∞–¥—à–∏–º —á–ª–µ–Ω–∞–º —Å–µ–º—å–∏ –∏ –∂–∏–≤–æ—Ç–Ω—ã–º
- –ê–≥—Ä–µ—Å—Å–∏—è –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º, —Ä–∞–≤–Ω–æ–¥—É—à–∏–µ
- –°—Ç—Ä–∞—Ö –ø–µ—Ä–µ–¥ –æ–±—ã—á–Ω—ã–º–∏ —Å–∏—Ç—É–∞—Ü–∏—è–º–∏
- –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–ø–ø–µ—Ç–∏—Ç–æ–º (—Å–Ω–∏–∂–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ)
- –°–∫—Ä–µ–∂–µ—Ç–∞–Ω–∏–µ –∑—É–±–∞–º–∏ –ø–æ –Ω–æ—á–∞–º, —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –∏–ª–∏ —Ö–æ–∂–¥–µ–Ω–∏–µ –≤–æ —Å–Ω–µ

<b>–ö–æ–≥–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É:</b>
- –ü—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º –ø—Ä–æ—è–≤–ª–µ–Ω–∏–∏ —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤
- –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
- –ö–æ–≥–¥–∞ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞—á–∏–Ω–∞—é—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —É—á—ë–±—É –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –∂–∏–∑–Ω—å —Ä–µ–±—ë–Ω–∫–∞
- –ü—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Å—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã—Ö –º—ã—Å–ª–µ–π –∏–ª–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è

<b>–ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ –∫—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è:</b>
1. –°–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
2. –†–∞–Ω–Ω–µ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
3. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –º–æ–∂–µ—Ç –¥–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏

–ü–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–∏—Ç—É–∞—Ü–∏–∏ –º–æ–≥—É—Ç:
‚Ä¢ –ü–µ–¥–∞–≥–æ–≥–∏-–ø—Å–∏—Ö–æ–ª–æ–≥–∏ –∫–æ–ª–ª–µ–¥–∂–∞
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ì–ë–£ –ì–ü–ü–¶ –î–û–ù–ú (https://www.gppc.ru)
‚Ä¢ –ï–¥–∏–Ω–∞—è —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –ì–ü–ü–¶: 8-(495)-730-21-93
    `;
    await ctx.reply(text, { parse_mode: 'HTML', reply_markup: upbringingMenu() });
});

bot.hears("ü§ù –í–Ω–µ—É—Ä–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å ¬´–ë—ã—Ç—å –≤–º–µ—Å—Ç–µ¬ª", async (ctx) => {
    await ctx.reply(`–£–≤–∞–∂–∞–µ–º—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏!

–í–Ω–µ—É—Ä–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å ‚Äî –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞, —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—â–∞—è –≤—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é –≤–∞—à–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞. –ë–ª–∞–≥–æ–¥–∞—Ä—è —É—á–∞—Å—Ç–∏—é –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –∫—Ä—É–∂–∫–∞—Ö –∏ –∫–ª—É–±–∞—Ö, —Å—Ç—É–¥–µ–Ω—Ç—ã –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–∞—Å—à–∏—Ä—è—é—Ç –∫—Ä—É–≥–æ–∑–æ—Ä, –Ω–æ –∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç —Ü–µ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –æ–±—â–µ–Ω–∏—è, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.

–ß—Ç–æ –¥–∞—ë—Ç –≤–Ω–µ—É—Ä–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–µ–º—É —Ä–µ–±—ë–Ω–∫—É:
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–∞–ª–∞–Ω—Ç—ã –∏ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ —É–≤–ª–µ—á–µ–Ω–∏—è
‚Ä¢ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏–¥–µ—Ä—Å–∫–∏—Ö –∏ –∫–æ–º–∞–Ω–¥–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤
‚Ä¢ –£—á–∞—Å—Ç–∏–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö, —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö
‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è —Å—Ä–µ–¥–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ —Å–≤–µ—Ä—Å—Ç–Ω–∏–∫–∞–º–∏
‚Ä¢ –†–∞–∑–≤–∏—Ç–∏–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã, —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ

–ú—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—à–∏—Ö –¥–µ—Ç–µ–π –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤–æ –≤–Ω–µ—É—Ä–æ—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∫–æ–ª–ª–µ–¥–∂–∞! –≠—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –Ω–æ –∏ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –±—É–¥—É—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∏ –ª–∏—á–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ –∫–ª—É–±–∞—Ö –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —É –∫—É—Ä–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –∏–ª–∏ –≤ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–º —Å–æ–≤–µ—Ç–µ.`, { reply_markup: upbringingMenu() });
});

bot.hears("üïäÔ∏è –°–ª—É–∂–±–∞ –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è", async (ctx) => {
    await ctx.reply(`–£–≤–∞–∂–∞–µ–º—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏!

–í –∫–æ–ª–ª–µ–¥–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–ª—É–∂–±–∞ –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è ‚Äî –∫–æ–º–∞–Ω–¥–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –º–∏—Ä–Ω–æ —Ä–∞–∑—Ä–µ—à–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —É–≤–∞–∂–µ–Ω–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.

–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞:
‚Ä¢ –°–ª—É–∂–±–∞ –ø–æ–º–æ–≥–∞–µ—Ç —Ä–µ—à–∞—Ç—å —Å–ø–æ—Ä–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞ –∏ –¥–∞–≤–ª–µ–Ω–∏—è
‚Ä¢ –í—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∏ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
‚Ä¢ –í–∞—à —Ä–µ–±—ë–Ω–æ–∫ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É, –Ω–∞—É—á–∏—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–º—É –æ–±—â–µ–Ω–∏—é –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—é –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
‚Ä¢ –ü—Ä–æ–≤–æ–¥—è—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—é –±—É–ª–ª–∏–Ω–≥–∞ –∏ –∞–≥—Ä–µ—Å—Å–∏–∏
‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑—É—é—Ç—Å—è —Ç—Ä–µ–Ω–∏–Ω–≥–∏ –∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –Ω–∞–≤—ã–∫–æ–≤ –æ–±—â–µ–Ω–∏—è

–ï—Å–ª–∏ —É –≤–∞—à–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ —Å–ª–æ–∂–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è –∏–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç, –æ–Ω –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å–ª—É–∂–±—É –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è. –ú—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –∫–æ–º—Ñ–æ—Ä—Ç–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞. –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–ª—É–∂–±—ã –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —É –∫—É—Ä–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –∏–ª–∏ –≤ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–º —Å–æ–≤–µ—Ç–µ.`, { reply_markup: upbringingMenu() });
});

bot.hears("üó£Ô∏è –•–æ—á—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏", async (ctx) => {
    if (!ctx.from?.id) return;
    if (!userNames[ctx.from.id]) {
        ctx.session.state = "awaiting_name_for_profession";
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è (–§–ò–û):", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    if (!userEmails[ctx.from.id]) {
        ctx.session.state = "awaiting_email_for_profession";
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email:", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    ctx.session.state = "awaiting_profession_story";
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.", {
        reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
    });
});

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
bot.hears("üõ†Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", async (ctx) => {
    if (!ctx.session.isAdmin) return;
    ctx.session.state = "admin_panel";
    await ctx.reply("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", { reply_markup: adminPanelMenu() });
});

// –ü—Ä–æ—Å–º–æ—Ç—Ä –∂–∞–ª–æ–±
bot.hears("üìã –ñ–∞–ª–æ–±—ã", async (ctx) => {
    if (!ctx.session.isAdmin || ctx.session.state !== "admin_panel") return;
    let message = 'üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∂–∞–ª–æ–±—ã:\n\n';
    if (complaints.length === 0) message += '–ñ–∞–ª–æ–± –Ω–µ—Ç.';
    complaints.forEach((complaint, idx) => {
        const name = userNames[complaint.userId] ? ` (${userNames[complaint.userId]})` : '';
        const email = userEmails[complaint.userId] ? `, email: ${userEmails[complaint.userId]}` : '';
        message += `#${complaint.userId}${name}${email}: ${complaint.text}\n–°—Ç–∞—Ç—É—Å: ${complaint.status}\n–î–∞—Ç–∞: ${complaint.date.toLocaleString()}\n\n`;
    });
    const kb = new Keyboard().text("–ó–∞–≤–µ—Ä—à–∏—Ç—å").row().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized();
    await ctx.reply(message, { reply_markup: kb });
    ctx.session.state = "admin_panel_complaints";
});

// –ö–Ω–æ–ø–∫–∞ –ó–∞–≤–µ—Ä—à–∏—Ç—å ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∂–∞–ª–æ–± –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
bot.hears("–ó–∞–≤–µ—Ä—à–∏—Ç—å", async (ctx) => {
    if (!ctx.session.isAdmin || ctx.session.state !== "admin_panel_complaints") return;
    if (complaints.length === 0) {
        await ctx.reply('–ñ–∞–ª–æ–± –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –Ω–µ—Ç.', { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() });
        return;
    }
    // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –∫–∞–∂–¥–∞—è –∂–∞–ª–æ–±–∞ ‚Äî –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ (–ø–æ userId –∏ —á–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞)
    const kb = new Keyboard();
    complaints.forEach((complaint, idx) => {
        const shortText = complaint.text.length > 20 ? complaint.text.slice(0, 20) + '...' : complaint.text;
        kb.text(`–ó–∞–≤–µ—Ä—à–∏—Ç—å –∂–∞–ª–æ–±—É #${complaint.userId} (${shortText})`);
        if ((idx + 1) % 2 === 0) kb.row();
    });
    kb.row().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized();
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–ª–æ–±—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:', { reply_markup: kb });
    ctx.session.state = "admin_panel_complaints_finish";
});

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∂–∞–ª–æ–±—ã –ø–æ –∫–Ω–æ–ø–∫–µ –∏–∑ —Å–ø–∏—Å–∫–∞
bot.hears(/^–ó–∞–≤–µ—Ä—à–∏—Ç—å –∂–∞–ª–æ–±—É #(\d+) \(.+\)$/, async (ctx) => {
    if (!ctx.session.isAdmin || ctx.session.state !== "admin_panel_complaints_finish") return;
    const userId = Number(ctx.match[1]);
    const idx = complaints.findIndex(c => c.userId === userId);
    if (idx === -1) {
        await ctx.reply('–ñ–∞–ª–æ–±–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.', { reply_markup: adminPanelMenu() });
        return;
    }
    const complaint = complaints[idx];
    complaints.splice(idx, 1);
    reviewedComplaints.push({ ...complaint, status: "reviewed" });
    // –£–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try {
        await bot.api.sendMessage(userId, '–í–∞—à–∞ –∂–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.');
    } catch {}
    await ctx.reply('–ñ–∞–ª–æ–±–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω–∞—è –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª.', { reply_markup: adminPanelMenu() });
    ctx.session.state = "admin_panel";
});

// FAQ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
bot.hears("‚ùì FAQ", async (ctx) => {
    if (!ctx.session.isAdmin || ctx.session.state !== "admin_panel") return;
    ctx.session.state = "admin_panel_faq";
    let text = "–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ FAQ:\n";
    faqs.forEach((faq, i) => {
        text += `${i + 1}. ${faq.question}\n`;
    });
    text += "\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n–í–æ–ø—Ä–æ—Å: ...\n–û—Ç–≤–µ—Ç: ...\n\n–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–£–¥–∞–ª–∏—Ç—å N' –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (N ‚Äî –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞).";
    await ctx.reply(text, { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() });
});


bot.hears("üì¨ –ò—Å—Ç–æ—Ä–∏–∏ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏", async (ctx) => {
    if (!ctx.session.isAdmin) return;
    let message = 'üì¨ –ò—Å—Ç–æ—Ä–∏–∏ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:\n\n';
    if (professionStories.length === 0) message += '–ò—Å—Ç–æ—Ä–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.';
    professionStories.forEach((story, i) => {
        const name = userNames[story.userId] ? ` (${userNames[story.userId]})` : '';
        const email = userEmails[story.userId] ? `, email: ${userEmails[story.userId]}` : '';
        message += `#${story.userId}${name}${email}: ${story.text}\n–°—Ç–∞—Ç—É—Å: ${story.status}\n–î–∞—Ç–∞: ${story.date.toLocaleString()}\n\n`;
    });
    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏ (Telegram –ª–∏–º–∏—Ç ~4096 —Å–∏–º–≤–æ–ª–æ–≤)
    const chunkSize = 3500;
    for (let i = 0; i < message.length; i += chunkSize) {
        await ctx.reply(message.slice(i, i + chunkSize), { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() });
    }
    ctx.session.state = "admin_panel_profession_stories";
});

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
bot.hears("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", async (ctx) => {
    if (!ctx.session.isAdmin || ctx.session.state !== "admin_panel") return;
    await ctx.reply(
        'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n' +
        'üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: XXX\n' +
        'üí¨ –°–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è: XXX\n' +
        '‚ùì –í–æ–ø—Ä–æ—Å–æ–≤ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ: XXX\n' +
        '‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: XXX',
        { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() }
    );
    ctx.session.state = "admin_panel_stats";
});

// –í–æ–∑–≤—Ä–∞—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∏–∑ –ø–æ–¥–º–µ–Ω—é
bot.hears("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", async (ctx) => {
    if (!ctx.session.isAdmin) return;
    ctx.session.state = "admin_panel";
    await ctx.reply("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", { reply_markup: adminPanelMenu() });
});

// –í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
bot.hears("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", async (ctx) => {
    ctx.session.state = undefined;
    await ctx.reply("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", { reply_markup: mainMenu(ctx.session.isAdmin, ctx.from?.id) });
});

// FAQ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ —Ä–µ–∂–∏–º–µ FAQ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏)
bot.on("message:text", async (ctx, next) => {
    if (ctx.session.state === "admin_panel_faq" && ctx.session.isAdmin) {
        const text = ctx.message?.text ?? "";
        if (text.startsWith("–í–æ–ø—Ä–æ—Å:") && text.includes("–û—Ç–≤–µ—Ç:")) {
            const q = text.split("–í–æ–ø—Ä–æ—Å:")[1].split("–û—Ç–≤–µ—Ç:")[0].trim();
            const a = text.split("–û—Ç–≤–µ—Ç:")[1].trim();
            faqs.push({ question: q, answer: a });
            await ctx.reply("FAQ –¥–æ–±–∞–≤–ª–µ–Ω.", { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() });
        } else if (text.toLowerCase().startsWith("—É–¥–∞–ª–∏—Ç—å")) {
            const num = parseInt(text.replace(/[^0-9]/g, ""), 10);
            if (!isNaN(num) && num > 0 && num <= faqs.length) {
                faqs.splice(num - 1, 1);
                await ctx.reply("FAQ —É–¥–∞–ª—ë–Ω.", { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() });
            } else {
                await ctx.reply("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä.", { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() });
            }
        } else {
            await ctx.reply("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() });
        }
        return;
    }
    await next();
});

// –ñ–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
bot.hears("‚úâÔ∏è –ñ–∞–ª–æ–±–∞/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", async (ctx) => {
    if (!ctx.from?.id) return;
    if (!userNames[ctx.from.id]) {
        ctx.session.state = "awaiting_name_for_complaint";
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è (–§–ò–û):", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    if (!userEmails[ctx.from.id]) {
        ctx.session.state = "awaiting_email_for_complaint";
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email:", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    ctx.session.state = "awaiting_complaint";
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∂–∞–ª–æ–±—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.", {
        reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
    });
});

// –ö–Ω–æ–ø–∫–∞ '‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é' ‚Äî –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
bot.hears("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é", async (ctx) => {
    ctx.session.state = undefined;
    await ctx.reply("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", { reply_markup: mainMenu(ctx.session.isAdmin, ctx.from?.id) });
});

// –ö–Ω–æ–ø–∫–∞ 'üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞' ‚Äî –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞
bot.hears("üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞", async (ctx) => {
        ctx.session.state = 'search';
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç!', {
        reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
    });
});

// --- –í–∞–ª–∏–¥–∞—Ü–∏—è email ---
function isValidEmail(email: string): boolean {
    // –ü—Ä–æ—Å—Ç–æ–π, –Ω–æ —Å—Ç—Ä–æ–≥–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω
    return /^[\w.-]+@[\w.-]+\.[a-zA-Z]{2,}$/.test(email.trim());
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message:text", async (ctx, next) => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û –¥–ª—è –∂–∞–ª–æ–±—ã
    if (ctx.session.state === "awaiting_name_for_complaint") {
        if (!ctx.from?.id) return;
        userNames[ctx.from.id] = ctx.message.text.trim();
        ctx.session.state = "awaiting_email_for_complaint";
        await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email:", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º email –¥–ª—è –∂–∞–ª–æ–±—ã
    if (ctx.session.state === "awaiting_email_for_complaint") {
        if (!ctx.from?.id) return;
        const email = ctx.message.text.trim();
        if (!isValidEmail(email)) {
            await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email (–Ω–∞–ø—Ä–∏–º–µ—Ä, example@mail.ru):", {
                reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
            });
            return;
        }
        userEmails[ctx.from.id] = email;
        ctx.session.state = "awaiting_complaint";
        await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∂–∞–ª–æ–±—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û –¥–ª—è —Ä–∞—Å—Å–∫–∞–∑–∞ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    if (ctx.session.state === "awaiting_name_for_profession") {
        if (!ctx.from?.id) return;
        userNames[ctx.from.id] = ctx.message.text.trim();
        ctx.session.state = "awaiting_email_for_profession";
        await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email:", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º email –¥–ª—è —Ä–∞—Å—Å–∫–∞–∑–∞ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    if (ctx.session.state === "awaiting_email_for_profession") {
        if (!ctx.from?.id) return;
        const email = ctx.message.text.trim();
        if (!isValidEmail(email)) {
            await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email (–Ω–∞–ø—Ä–∏–º–µ—Ä, example@mail.ru):", {
                reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
            });
            return;
        }
        userEmails[ctx.from.id] = email;
        ctx.session.state = "awaiting_profession_story";
        await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∂–∞–ª–æ–±—ã/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è (—Ç–µ–ø–µ—Ä—å –±–µ–∑ —Ñ–∞–π–ª–æ–≤)
    if (ctx.session.state === "awaiting_complaint") {
        if (!ctx.from?.id) {
            await ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à ID. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            return;
        }
        const complaint = {
            userId: ctx.from.id,
            text: ctx.message.text,
            date: new Date(),
            status: "new" as const
        };
        complaints.push(complaint);
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        const name = userNames[ctx.from.id] ? ` (${userNames[ctx.from.id]})` : '';
        const email = userEmails[ctx.from.id] ? `, email: ${userEmails[ctx.from.id]}` : '';
        await ctx.reply(`–í–∞—à–∞ –∂–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ. –°–ø–∞—Å–∏–±–æ!`, { reply_markup: mainMenu(ctx.session.isAdmin, ctx.from?.id) });
    }

    await next();
});

export const startBot = () => {
    console.log('Bot starting');
    return bot.start();
};