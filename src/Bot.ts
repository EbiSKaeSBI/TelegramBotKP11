import { Bot, session, Keyboard, InputFile } from 'grammy';
import * as dotenv from "dotenv";
dotenv.config();

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã
import { processUserMessage } from './services/flowise-ai';
import { faqs, complaints, ADMINS, professionStories, userNames, userEmails, finishedComplaints, reviewedComplaints } from './constants';
import { SessionData, FAQ, Complaint, MyContext } from './types';
import { sessionMiddleware, adminCheckMiddleware, errorHandler } from './middleware';
import * as complaintService from './services/complaints';
import * as userService from './services/users';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!process.env.TELEGRAM_BOT_TOKEN) {
    throw new Error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–¥–µ–ª–∞—é –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π)
async function mainMenu(isAdmin = false, userId?: number) {
    const kb = new Keyboard()
        .text("üìö –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞")
        .text("üå± –í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å")
        .row()
        .text("‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
        .text("‚úâÔ∏è –ñ–∞–ª–æ–±–∞/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
        .row()
        .text("üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è")
        .text("üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞");
    if (userId) {
        const user = await userService.getUser(userId);
        if (user) {
            kb.row().text("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç");
        }
    }
    if (isAdmin) {
        kb.row().text("üõ†Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å");
    }
    return kb.resized();
}

// –ü–æ–¥–º–µ–Ω—é –¥–ª—è –±–ª–æ–∫–∞ 1
function eduProcessMenu() {
    return new Keyboard()
        .text("üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
        .row()
        .text("üìñ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º")
        .row()
        .text("üéì –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
        .row()
        .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        .resized();
}

// –ü–æ–¥–º–µ–Ω—é –¥–ª—è –±–ª–æ–∫–∞ 2
function upbringingMenu() {
    return new Keyboard()
        .text("üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è")
        .row()
        .text("ü§ù –í–Ω–µ—É—Ä–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å ¬´–ë—ã—Ç—å –≤–º–µ—Å—Ç–µ¬ª")
        .row()
        .text("üïäÔ∏è –°–ª—É–∂–±–∞ –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è")
        .row()
        .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        .resized();
}

// –ü–æ–¥–º–µ–Ω—é –¥–ª—è –±–ª–æ–∫–∞ 5
function profOrientationMenu() {
    return new Keyboard()
        .text("üó£Ô∏è –•–æ—á—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏")
        .row()
        .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
        .resized();
}

// –ú–µ–Ω—é –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞
function parentCabinetMenu() {
    return new Keyboard()
        .text("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å email")
        .text("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û")
        .row()
        .text("üìÑ –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è")
        .row()
        .text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized();
}

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –±–æ—Ç–∞ —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
const bot = new Bot<MyContext>(process.env.TELEGRAM_BOT_TOKEN);

// –ò—Å–ø–æ–ª—å–∑—É–µ–º middleware
bot.use(sessionMiddleware);
bot.use(adminCheckMiddleware);
errorHandler(bot);

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function adminPanelMenu() {
    return new Keyboard()
        .text("üìã –ñ–∞–ª–æ–±—ã")
        .row()
        .text("‚ùì FAQ")
        .row()
        .text("üì¨ –ò—Å—Ç–æ—Ä–∏–∏ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏")
        .row()
        .text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        .resized();
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.command('start', async (ctx) => {
    // –í—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –¥–∞–∂–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
    await ctx.replyWithPhoto(
        new InputFile('./src/assets/owl_hi.png'),
        {
            caption: '–ü—Ä–∏–≤–µ—Ç! –Ø - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ö–æ–ª–ª–µ–¥–∂–∞ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞ ‚Ññ11. ' +
            '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å:',
            reply_markup: await mainMenu(ctx.session.isAdmin, ctx.from?.id)
        }
    )
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
bot.hears("üìö –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞", async (ctx) => {
    ctx.session.state = 'edu_process';
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:", { reply_markup: eduProcessMenu() });
});

bot.hears("üå± –í–æ—Å–ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å", async (ctx) => {
    ctx.session.state = 'upbringing';
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:", { reply_markup: upbringingMenu() });
});

bot.hears("üß≠ –ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è", async (ctx) => {
    ctx.session.state = 'prof_orientation';
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:", { reply_markup: profOrientationMenu() });
});

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ (—Ä–∞–∑–º–µ—â–∞—é –≤—ã—à–µ bot.on('message:text')) ---
bot.hears("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å email", async (ctx) => {
    ctx.session.state = "change_email";
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π email:", { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized() });
});

bot.hears("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û", async (ctx) => {
    ctx.session.state = "change_name";
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –§–ò–û:", { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized() });
});

bot.hears("üìÑ –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è", async (ctx) => {
    if (!ctx.from?.id) return;
    const userId = ctx.from.id;
    let message = '–í–∞—à–∏ –∂–∞–ª–æ–±—ã/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:\n\n';
    const myComplaints = [
        ...complaints.filter(c => c.userId === userId),
        ...reviewedComplaints.filter(c => c.userId === userId),
        ...finishedComplaints.filter(c => c.userId === userId)
    ];
    if (myComplaints.length === 0) message += '–ñ–∞–ª–æ–±/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç.';
    myComplaints.forEach(complaint => {
        let statusDisplay: string;
        if (complaint.status === 'closed') statusDisplay = '–∑–∞–≤–µ—Ä—à–µ–Ω–∞';
        else if (complaint.status === 'reviewed') statusDisplay = '—Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞';
        else statusDisplay = '–Ω–æ–≤–∞—è';
        message += `‚Ä¢ ${complaint.text}\n–°—Ç–∞—Ç—É—Å: ${statusDisplay}\n–î–∞—Ç–∞: ${complaint.date.toLocaleString()}\n\n`;
    });
    message += '\n–í–∞—à–∏ —Ä–∞—Å—Å–∫–∞–∑—ã –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏:\n\n';
    const myStories = professionStories.filter(s => s.userId === userId);
    if (myStories.length === 0) message += '–†–∞—Å—Å–∫–∞–∑–æ–≤ –Ω–µ—Ç.';
    myStories.forEach(story => {
        message += `‚Ä¢ ${story.text}\n–°—Ç–∞—Ç—É—Å: ${story.status}\n–î–∞—Ç–∞: ${story.date.toLocaleString()}\n\n`;
    });
    // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
    const chunkSize = 3500;
    for (let i = 0; i < message.length; i += chunkSize) {
        await ctx.reply(message.slice(i, i + chunkSize), { reply_markup: parentCabinetMenu() });
    }
    ctx.session.state = "parent_cabinet";
});

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ (—Ä–∞–∑–º–µ—â–∞—é –Ω–∏–∂–µ –≤—Å–µ—Ö –º–µ–Ω—é, –Ω–æ –≤—ã—à–µ catch-all) ---
bot.hears("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", async (ctx) => {
    ctx.session.state = "parent_cabinet";
    await ctx.reply("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:", { reply_markup: parentCabinetMenu() });
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ '‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã'
bot.hears("‚ùì –û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", async (ctx) => {
    ctx.session.state = undefined;
    const kb = new Keyboard();
    faqs.forEach(faq => kb.text(faq.question));
    kb.row().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é");
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:", { reply_markup: kb.resized() });
});

// –û—Ç–≤–µ—Ç –Ω–∞ FAQ
bot.hears(faqs.map(f => f.question), async (ctx) => {
    const faq = faqs.find(f => f.question === ctx.message?.text);
    if (faq) {
        // –ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
        const kb = new Keyboard();
        faqs.forEach(faq => kb.text(faq.question));
        kb.row().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é");
        await ctx.reply(`–í–æ–ø—Ä–æ—Å: ${faq.question}\n–û—Ç–≤–µ—Ç: ${faq.answer}`, { reply_markup: kb.resized() });
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–º–µ–Ω—é –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞
bot.hears("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", async (ctx) => {
    ctx.session.state = undefined;
    await ctx.reply("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", { reply_markup: await mainMenu(ctx.session.isAdmin, ctx.from?.id) });
});

// –ü—Ä–∏–º–µ—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–±–ª–æ–∫–æ–≤ (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å)
bot.hears("üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", async (ctx) => {
    const text = `
<b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—á–µ–±–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –∏ –∫–∞–Ω–∏–∫—É–ª</b>

–ê–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π, –∞ —Ç–∞–∫–∂–µ –≥—Ä–∞—Ñ–∏–∫ –∫–∞–Ω–∏–∫—É–ª –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∫–æ–ª–ª–µ–¥–∂–∞ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ –∫–æ–ª–ª–µ–¥–∂–∞ –ø–æ —Å—Å—ã–ª–∫–µ:
https://kp11.mskobr.ru/uchashimsya/raspisanie-kanikuly

–ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã:
‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—á–µ–±–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –¥–ª—è –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤ –∏ –≥—Ä—É–ø–ø
‚Ä¢ –ì—Ä–∞—Ñ–∏–∫ —É—á–µ–±–Ω—ã—Ö –ø–µ—Ä–∏–æ–¥–æ–≤ –∏ –∫–∞–Ω–∏–∫—É–ª –Ω–∞ —Ç–µ–∫—É—â–∏–π —É—á–µ–±–Ω—ã–π –≥–æ–¥
‚Ä¢ –í–∞–∂–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π!
    `;
    await ctx.reply(text, { parse_mode: 'HTML', reply_markup: eduProcessMenu() });
});

bot.hears("üìñ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º", async (ctx) => {
    const text = `
<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º</b>

–ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∞–ª–∏–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö, —É—á–µ–±–Ω—ã—Ö –ø–ª–∞–Ω–∞—Ö, –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è—Ö –∏ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –¥–∏—Å—Ü–∏–ø–ª–∏–Ω –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ –∫–æ–ª–ª–µ–¥–∂–∞ –ø–æ —Å—Å—ã–ª–∫–µ:
https://kp11.mskobr.ru/info_edu/education

–ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã:
‚Ä¢ –ü–µ—Ä–µ—á–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º, —Ä–µ–∞–ª–∏–∑—É–µ–º—ã—Ö –≤ –∫–æ–ª–ª–µ–¥–∂–µ
‚Ä¢ –£—á–µ–±–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º
‚Ä¢ –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –∫ –ø—Ä–æ–≥—Ä–∞–º–º–∞–º –∏ —Ä–∞–±–æ—á–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–∏—Å—Ü–∏–ø–ª–∏–Ω
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –Ω–∞ —Å–∞–π—Ç–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º.
    `;
    await ctx.reply(text, { parse_mode: 'HTML', reply_markup: eduProcessMenu() });
});

bot.hears("üéì –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", async (ctx) => {
    const text = `
<b>üéì –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</b>

–ö–æ–ª–ª–µ–¥–∂ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏ –ª–∏—á–Ω–æ—Å—Ç–Ω—ã—Ö –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. 

–ù–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ –∫–æ–ª–ª–µ–¥–∂–∞ –≤—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø–µ—Ä–µ—á–Ω–µ–º –ø—Ä–æ–≥—Ä–∞–º–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, —É–∑–Ω–∞—Ç—å –æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–∏ –∫—É—Ä—Å–æ–≤, —É—Å–ª–æ–≤–∏—è—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –∑–∞–Ω—è—Ç–∏–π:
https://kp11.mskobr.ru/info_edu/education

–í —Ä–∞–∑–¥–µ–ª–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã:
‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏
‚Ä¢ –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –∫—É—Ä—Å—ã –∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∑–Ω–∞–Ω–∏–π –∏ –Ω–∞–≤—ã–∫–æ–≤ –ø–æ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º

–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ –ø–æ—Å–µ—â–∞—Ç—å —Å–∞–π—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–æ–≤—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è!
    `;
    await ctx.reply(text, { parse_mode: 'HTML', reply_markup: eduProcessMenu() });
});

bot.hears("üß† –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", async (ctx) => {
    const text = `
<b>–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</b>

<b>–ö–∞–∫–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —É —Ä–µ–±—ë–Ω–∫–∞?</b>
- –†–µ–∑–∫–∞—è —Å–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –≤ —Ö—É–¥—à—É—é —Å—Ç–æ—Ä–æ–Ω—É
- –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∞–ø–∞—Ç–∏—è –∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ –ª—é–±–∏–º—ã–º –∑–∞–Ω—è—Ç–∏—è–º
- –í—Å–ø—ã—à–∫–∏ –≥–Ω–µ–≤–∞ –∏ —è—Ä–æ—Å—Ç–∏
- –ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å, —á–∞—Å—Ç—ã–µ –∫–æ—à–º–∞—Ä—ã
- –ü–æ—è–≤–ª–µ–Ω–∏–µ –Ω–µ–æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞—Ö–æ–≤ (—Ç–µ–º–Ω–æ—Ç–∞, –∂–∏–≤–æ—Ç–Ω—ã–µ –∏ –¥—Ä.)
- –ñ–µ—Å—Ç–æ–∫–æ—Å—Ç—å –∫ –º–ª–∞–¥—à–∏–º —á–ª–µ–Ω–∞–º —Å–µ–º—å–∏ –∏ –∂–∏–≤–æ—Ç–Ω—ã–º
- –ê–≥—Ä–µ—Å—Å–∏—è –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º, —Ä–∞–≤–Ω–æ–¥—É—à–∏–µ
- –°—Ç—Ä–∞—Ö –ø–µ—Ä–µ–¥ –æ–±—ã—á–Ω—ã–º–∏ —Å–∏—Ç—É–∞—Ü–∏—è–º–∏
- –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–ø–ø–µ—Ç–∏—Ç–æ–º (—Å–Ω–∏–∂–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ)
- –°–∫—Ä–µ–∂–µ—Ç–∞–Ω–∏–µ –∑—É–±–∞–º–∏ –ø–æ –Ω–æ—á–∞–º, —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –∏–ª–∏ —Ö–æ–∂–¥–µ–Ω–∏–µ –≤–æ —Å–Ω–µ

<b>–ö–æ–≥–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É:</b>
- –ü—Ä–∏ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º –ø—Ä–æ—è–≤–ª–µ–Ω–∏–∏ —Ç—Ä–µ–≤–æ–∂–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤
- –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
- –ö–æ–≥–¥–∞ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞—á–∏–Ω–∞—é—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —É—á—ë–±—É –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –∂–∏–∑–Ω—å —Ä–µ–±—ë–Ω–∫–∞
- –ü—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ —Å—É–∏—Ü–∏–¥–∞–ª—å–Ω—ã—Ö –º—ã—Å–ª–µ–π –∏–ª–∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è

<b>–ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ –∫—É–¥–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è:</b>
1. –°–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
2. –†–∞–Ω–Ω–µ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
3. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –º–æ–∂–µ—Ç –¥–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–æ—Ä—Ä–µ–∫—Ü–∏–∏ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏

–ü–æ–º–æ—á—å —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–∏—Ç—É–∞—Ü–∏–∏ –º–æ–≥—É—Ç:
‚Ä¢ –ü–µ–¥–∞–≥–æ–≥–∏-–ø—Å–∏—Ö–æ–ª–æ–≥–∏ –∫–æ–ª–ª–µ–¥–∂–∞
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ì–ë–£ –ì–ü–ü–¶ –î–û–ù–ú (https://www.gppc.ru)
‚Ä¢ –ï–¥–∏–Ω–∞—è —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –ì–ü–ü–¶: 8-(495)-730-21-93
    `;
    await ctx.reply(text, { parse_mode: 'HTML', reply_markup: upbringingMenu() });
});

bot.hears("ü§ù –í–Ω–µ—É—Ä–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å ¬´–ë—ã—Ç—å –≤–º–µ—Å—Ç–µ¬ª", async (ctx) => {
    await ctx.reply(`–£–≤–∞–∂–∞–µ–º—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏!

–í–Ω–µ—É—Ä–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å ‚Äî –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞, —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—â–∞—è –≤—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é –≤–∞—à–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞. –ë–ª–∞–≥–æ–¥–∞—Ä—è —É—á–∞—Å—Ç–∏—é –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö, –∫—Ä—É–∂–∫–∞—Ö –∏ –∫–ª—É–±–∞—Ö, —Å—Ç—É–¥–µ–Ω—Ç—ã –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–∞—Å—à–∏—Ä—è—é—Ç –∫—Ä—É–≥–æ–∑–æ—Ä, –Ω–æ –∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç —Ü–µ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –æ–±—â–µ–Ω–∏—è, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.

–ß—Ç–æ –¥–∞—ë—Ç –≤–Ω–µ—É—Ä–æ—á–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–µ–º—É —Ä–µ–±—ë–Ω–∫—É:
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–∞–ª–∞–Ω—Ç—ã –∏ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ —É–≤–ª–µ—á–µ–Ω–∏—è
‚Ä¢ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏–¥–µ—Ä—Å–∫–∏—Ö –∏ –∫–æ–º–∞–Ω–¥–Ω—ã—Ö –∫–∞—á–µ—Å—Ç–≤
‚Ä¢ –£—á–∞—Å—Ç–∏–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö, —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö
‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è —Å—Ä–µ–¥–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ —Å–≤–µ—Ä—Å—Ç–Ω–∏–∫–∞–º–∏
‚Ä¢ –†–∞–∑–≤–∏—Ç–∏–µ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã, —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–±–µ

–ú—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—à–∏—Ö –¥–µ—Ç–µ–π –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤–æ –≤–Ω–µ—É—Ä–æ—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∫–æ–ª–ª–µ–¥–∂–∞! –≠—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –Ω–æ –∏ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –±—É–¥—É—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∏ –ª–∏—á–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –∏ –∫–ª—É–±–∞—Ö –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —É –∫—É—Ä–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –∏–ª–∏ –≤ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–º —Å–æ–≤–µ—Ç–µ.`, { reply_markup: upbringingMenu() });
});

bot.hears("üïäÔ∏è –°–ª—É–∂–±–∞ –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è", async (ctx) => {
    await ctx.reply(`–£–≤–∞–∂–∞–µ–º—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏!

–í –∫–æ–ª–ª–µ–¥–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–ª—É–∂–±–∞ –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è ‚Äî –∫–æ–º–∞–Ω–¥–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –º–∏—Ä–Ω–æ —Ä–∞–∑—Ä–µ—à–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É —É–≤–∞–∂–µ–Ω–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.

–ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞:
‚Ä¢ –°–ª—É–∂–±–∞ –ø–æ–º–æ–≥–∞–µ—Ç —Ä–µ—à–∞—Ç—å —Å–ø–æ—Ä–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞ –∏ –¥–∞–≤–ª–µ–Ω–∏—è
‚Ä¢ –í—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é—Ç—Å—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∏ —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
‚Ä¢ –í–∞—à —Ä–µ–±—ë–Ω–æ–∫ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É, –Ω–∞—É—á–∏—Ç—å—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ–º—É –æ–±—â–µ–Ω–∏—é –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—é –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
‚Ä¢ –ü—Ä–æ–≤–æ–¥—è—Ç—Å—è –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—é –±—É–ª–ª–∏–Ω–≥–∞ –∏ –∞–≥—Ä–µ—Å—Å–∏–∏
‚Ä¢ –û—Ä–≥–∞–Ω–∏–∑—É—é—Ç—Å—è —Ç—Ä–µ–Ω–∏–Ω–≥–∏ –∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é –Ω–∞–≤—ã–∫–æ–≤ –æ–±—â–µ–Ω–∏—è

–ï—Å–ª–∏ —É –≤–∞—à–µ–≥–æ —Ä–µ–±—ë–Ω–∫–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ —Å–ª–æ–∂–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è –∏–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç, –æ–Ω –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å–ª—É–∂–±—É –ø—Ä–∏–º–∏—Ä–µ–Ω–∏—è. –ú—ã –∑–∞–±–æ—Ç–∏–º—Å—è –æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –∫–æ–º—Ñ–æ—Ä—Ç–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞. –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–ª—É–∂–±—ã –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —É –∫—É—Ä–∞—Ç–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –∏–ª–∏ –≤ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–º —Å–æ–≤–µ—Ç–µ.`, { reply_markup: upbringingMenu() });
});

bot.hears("üó£Ô∏è –•–æ—á—É —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏", async (ctx) => {
    if (!ctx.from?.id) return;
    if (!userNames[ctx.from.id]) {
        ctx.session.state = "awaiting_name_for_profession";
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è (–§–ò–û):", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    if (!userEmails[ctx.from.id]) {
        ctx.session.state = "awaiting_email_for_profession";
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email:", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    ctx.session.state = "awaiting_profession_story";
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.", {
        reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
    });
});

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
bot.hears("üõ†Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", async (ctx) => {
    if (!ctx.session.isAdmin) return;
    ctx.session.state = "admin_panel";
    await ctx.reply("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", { reply_markup: adminPanelMenu() });
});

// –ü—Ä–æ—Å–º–æ—Ç—Ä –∂–∞–ª–æ–± (—Ç–µ–ø–µ—Ä—å –ø–æ userId)
bot.hears("üìã –ñ–∞–ª–æ–±—ã", async (ctx) => {
    if (!ctx.session.isAdmin || ctx.session.state !== "admin_panel") return;
    const usersWithComplaints = await complaintService.getAllComplaintUsers();
    if (usersWithComplaints.length === 0) {
        await ctx.reply('–ñ–∞–ª–æ–± –Ω–µ—Ç.', { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() });
        return;
    }
    const kb = new Keyboard();
    for (const { telegramId } of usersWithComplaints) {
        const user = await userService.getUser(telegramId);
        const name = user?.name ? ` (${user.name})` : '';
        const email = user?.email ? `, email: ${user.email}` : '';
        kb.text(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${telegramId}${name}${email}`).row();
    }
    kb.text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized();
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∂–∞–ª–æ–±:', { reply_markup: kb });
    ctx.session.state = "admin_panel_complaints_users";
});

// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –µ–≥–æ –∂–∞–ª–æ–± (–∫–Ω–æ–ø–∫–∏) —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
bot.hears(/^–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #(\d+)/, async (ctx) => {
    if (!ctx.session.isAdmin || ctx.session.state !== "admin_panel_complaints_users") return;
    const userId = Number(ctx.match[1]);
    const userComplaints = await complaintService.getUserComplaints(userId);
    if (userComplaints.length === 0) {
        await ctx.reply('–ñ–∞–ª–æ–± —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç.', { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º").resized() });
        return;
    }
    const page = 0;
    const pageSize = 4;
    const totalPages = Math.ceil(userComplaints.length / pageSize);
    const complaintsPage = userComplaints.slice(page * pageSize, (page + 1) * pageSize);
    const kb = new Keyboard();
    complaintsPage.forEach((complaint: any, idx: number) => {
        const shortText = complaint.text.length > 20 ? complaint.text.slice(0, 20) + '...' : complaint.text;
        kb.text(`–ñ–∞–ª–æ–±–∞ #${complaint.id} (${shortText})`).row();
    });
    if (totalPages > 1) {
        kb.text("–î–∞–ª–µ–µ");
    }
    kb.text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º").resized();
    await ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–ª–æ–±—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (—Å—Ç—Ä. ${page + 1} –∏–∑ ${totalPages}):`, { reply_markup: kb });
    ctx.session.state = `admin_panel_complaints_list_${userId}_page_${page}`;
});

// –ü–∞–≥–∏–Ω–∞—Ü–∏—è: –î–∞–ª–µ–µ
bot.hears("–î–∞–ª–µ–µ", async (ctx) => {
    if (!ctx.session.isAdmin || !ctx.session.state?.startsWith("admin_panel_complaints_list_")) return;
    const match = ctx.session.state.match(/^admin_panel_complaints_list_(\d+)_page_(\d+)$/);
    if (!match) return;
    const userId = Number(match[1]);
    let page = Number(match[2]);
    const userComplaints = await complaintService.getUserComplaints(userId);
    const pageSize = 4;
    const totalPages = Math.ceil(userComplaints.length / pageSize);
    if (page + 1 >= totalPages) return;
    page++;
    const complaintsPage = userComplaints.slice(page * pageSize, (page + 1) * pageSize);
    const kb = new Keyboard();
    complaintsPage.forEach((complaint: any, idx: number) => {
        const shortText = complaint.text.length > 20 ? complaint.text.slice(0, 20) + '...' : complaint.text;
        kb.text(`–ñ–∞–ª–æ–±–∞ #${complaint.id} (${shortText})`).row();
    });
    if (page > 0) kb.text("–ù–∞–∑–∞–¥");
    if (page + 1 < totalPages) kb.text("–î–∞–ª–µ–µ");
    kb.text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º").resized();
    await ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–ª–æ–±—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (—Å—Ç—Ä. ${page + 1} –∏–∑ ${totalPages}):`, { reply_markup: kb });
    ctx.session.state = `admin_panel_complaints_list_${userId}_page_${page}`;
});

// –ü–∞–≥–∏–Ω–∞—Ü–∏—è: –ù–∞–∑–∞–¥
bot.hears("–ù–∞–∑–∞–¥", async (ctx) => {
    if (!ctx.session.isAdmin || !ctx.session.state?.startsWith("admin_panel_complaints_list_")) return;
    const match = ctx.session.state.match(/^admin_panel_complaints_list_(\d+)_page_(\d+)$/);
    if (!match) return;
    const userId = Number(match[1]);
    let page = Number(match[2]);
    if (page === 0) return;
    page--;
    const userComplaints = await complaintService.getUserComplaints(userId);
    const pageSize = 4;
    const totalPages = Math.ceil(userComplaints.length / pageSize);
    const complaintsPage = userComplaints.slice(page * pageSize, (page + 1) * pageSize);
    const kb = new Keyboard();
    complaintsPage.forEach((complaint: any, idx: number) => {
        const shortText = complaint.text.length > 20 ? complaint.text.slice(0, 20) + '...' : complaint.text;
        kb.text(`–ñ–∞–ª–æ–±–∞ #${complaint.id} (${shortText})`).row();
    });
    if (page > 0) kb.text("–ù–∞–∑–∞–¥");
    if (page + 1 < totalPages) kb.text("–î–∞–ª–µ–µ");
    kb.text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º").resized();
    await ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–ª–æ–±—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (—Å—Ç—Ä. ${page + 1} –∏–∑ ${totalPages}):`, { reply_markup: kb });
    ctx.session.state = `admin_panel_complaints_list_${userId}_page_${page}`;
});

// –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –∂–∞–ª–æ–±—ã ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∏ –¥–µ–π—Å—Ç–≤–∏—è
bot.hears(/^–ñ–∞–ª–æ–±–∞ #(\d+) /, async (ctx) => {
    if (!ctx.session.isAdmin || !ctx.session.state?.startsWith("admin_panel_complaints_list_")) return;
    const complaintId = Number(ctx.match[1]);
    const complaint = await complaintService.getComplaintById(complaintId);
    if (!complaint) {
        await ctx.reply('–ñ–∞–ª–æ–±–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.', { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∂–∞–ª–æ–±–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è").resized() });
        return;
    }
    if (complaint.status === 'NEW') {
        await complaintService.setComplaintStatus(complaintId, 'REVIEWED');
    }
    const user = await userService.getUser(complaint.telegramId);
    let message = `–ñ–∞–ª–æ–±–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è #${complaint.telegramId}`;
    if (user?.name) message += ` (${user.name})`;
    if (user?.email) message += `, email: ${user.email}`;
    message += `:\n\n${complaint.text}\n–°—Ç–∞—Ç—É—Å: –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ\n–î–∞—Ç–∞: ${complaint.createdAt.toLocaleString()}`;
    const kb = new Keyboard()
        .text("–ó–∞–∫—Ä—ã—Ç—å —ç—Ç—É –∂–∞–ª–æ–±—É")
        .row()
        .text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∂–∞–ª–æ–±–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è").resized();
    await ctx.reply(message, { reply_markup: kb });
    ctx.session.state = `admin_panel_complaint_detail_${complaint.telegramId}_${complaintId}`;
});

// –ó–∞–∫—Ä—ã—Ç—å –æ–¥–Ω—É –∂–∞–ª–æ–±—É
bot.hears("–ó–∞–∫—Ä—ã—Ç—å —ç—Ç—É –∂–∞–ª–æ–±—É", async (ctx) => {
    if (!ctx.session.isAdmin || !ctx.session.state?.startsWith("admin_panel_complaint_detail_")) return;
    const parts = ctx.session.state.replace("admin_panel_complaint_detail_", "").split("_");
    const userId = Number(parts[0]);
    const complaintId = Number(parts[1]);
    const complaint = await complaintService.getComplaintById(complaintId);
    if (!complaint || complaint.status === 'CLOSED') {
        await ctx.reply('–ñ–∞–ª–æ–±–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –∑–∞–∫—Ä—ã—Ç–∞.', { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∂–∞–ª–æ–±–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è").resized() });
        return;
    }
    await complaintService.setComplaintStatus(complaintId, 'CLOSED');
    try {
        await bot.api.sendMessage(userId, '–í–∞—à–∞ –∂–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.');
    } catch {}
    await ctx.reply('–ñ–∞–ª–æ–±–∞ –∑–∞–∫—Ä—ã—Ç–∞ –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ.', { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∂–∞–ª–æ–±–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è").resized() });
    ctx.session.state = `admin_panel_complaints_list_${userId}`;
});

// –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∂–∞–ª–æ–± –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.hears("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∂–∞–ª–æ–±–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", async (ctx) => {
    if (!ctx.session.isAdmin) return;
    let userId: number | undefined = undefined;
    if (ctx.session.state?.startsWith("admin_panel_complaint_detail_")) {
        const parts = ctx.session.state.replace("admin_panel_complaint_detail_", "").split("_");
        userId = Number(parts[0]);
    } else if (ctx.session.state?.startsWith("admin_panel_complaints_list_")) {
        userId = Number(ctx.session.state.replace("admin_panel_complaints_list_", ""));
    }
    if (!userId) return;
    const userComplaints = await complaintService.getUserComplaints(userId);
    if (userComplaints.length === 0) {
        await ctx.reply('–ñ–∞–ª–æ–± —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç.', { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º").resized() });
        ctx.session.state = "admin_panel_complaints_users";
        return;
    }
    const kb = new Keyboard();
    userComplaints.forEach((complaint: any, idx: number) => {
        const shortText = complaint.text.length > 20 ? complaint.text.slice(0, 20) + '...' : complaint.text;
        kb.text(`–ñ–∞–ª–æ–±–∞ #${complaint.id} (${shortText})`).row();
    });
    kb.text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º").resized();
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–ª–æ–±—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:', { reply_markup: kb });
    ctx.session.state = `admin_panel_complaints_list_${userId}`;
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º' ‚Äî –≤–æ–∑–≤—Ä–∞—Ç –∫ —Å–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∂–∞–ª–æ–±–∞–º–∏
bot.hears("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", async (ctx) => {
    if (!ctx.session.isAdmin) return;
    const usersWithComplaints = await complaintService.getAllComplaintUsers();
    if (usersWithComplaints.length === 0) {
        await ctx.reply('–ñ–∞–ª–æ–± –Ω–µ—Ç.', { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized() });
        ctx.session.state = "admin_panel_complaints_users";
        return;
    }
    const kb = new Keyboard();
    for (const { telegramId } of usersWithComplaints) {
        const user = await userService.getUser(telegramId);
        const name = user?.name ? ` (${user.name})` : '';
        const email = user?.email ? `, email: ${user.email}` : '';
        kb.text(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å #${telegramId}${name}${email}`).row();
    }
    kb.text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å").resized();
    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∂–∞–ª–æ–±:', { reply_markup: kb });
    ctx.session.state = "admin_panel_complaints_users";
});

// –ñ–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å –ª–∏–º–∏—Ç–æ–º –Ω–∞ –æ–¥–Ω—É –∞–∫—Ç–∏–≤–Ω—É—é –∂–∞–ª–æ–±—É
bot.hears("‚úâÔ∏è –ñ–∞–ª–æ–±–∞/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", async (ctx) => {
    if (!ctx.from?.id) return;
    const userId = ctx.from.id;
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    await userService.upsertUser(userId);
    const activeComplaints = await complaintService.getActiveComplaints(userId);
    if (activeComplaints.length > 0) {
        await ctx.reply("–í–∞—à–∞ –∂–∞–ª–æ–±–∞ –µ—â—ë –Ω–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞. –í—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—É—é, –∫–æ–≥–¥–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–∫—Ä–æ–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â—É—é.", {
            reply_markup: await mainMenu(ctx.session.isAdmin, ctx.from?.id)
        });
        return;
    }
    const user = await userService.getUser(userId);
    if (!user?.name) {
        ctx.session.state = "awaiting_name_for_complaint";
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è (–§–ò–û):", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    if (!user?.email) {
        ctx.session.state = "awaiting_email_for_complaint";
        await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email:", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    ctx.session.state = "awaiting_complaint";
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∂–∞–ª–æ–±—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.", {
        reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
    });
});

// –ö–Ω–æ–ø–∫–∞ '‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é' ‚Äî –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
bot.hears("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é", async (ctx) => {
    ctx.session.state = undefined;
    await ctx.reply("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", { reply_markup: await mainMenu(ctx.session.isAdmin, ctx.from?.id) });
});

// –ö–Ω–æ–ø–∫–∞ 'üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞' ‚Äî –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞
bot.hears("üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞", async (ctx) => {
    ctx.session.state = 'search';
    await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç!', {
        reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
    });
});

// AI-–ø–æ–∏—Å–∫: –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∏—Å–∫–∞
bot.on("message:text", async (ctx, next) => {
    if (ctx.session.state === 'search') {
        await ctx.reply('–ü–æ–¥–æ–∂–¥–∏—Ç–µ, —Å–µ–π—á–∞—Å –æ—Ç–≤–µ—á—É...');
        const answer = await processUserMessage(ctx.message.text);
        await ctx.reply(answer, { reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized() });
        ctx.session.state = undefined;
        return;
    }
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û –¥–ª—è –∂–∞–ª–æ–±—ã
    if (ctx.session.state === "awaiting_name_for_complaint") {
        if (!ctx.from?.id) return;
        await userService.upsertUser(ctx.from.id, ctx.message.text.trim());
        ctx.session.state = "awaiting_email_for_complaint";
        await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email:", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º email –¥–ª—è –∂–∞–ª–æ–±—ã
    if (ctx.session.state === "awaiting_email_for_complaint") {
        if (!ctx.from?.id) return;
        const email = ctx.message.text.trim();
        if (!isValidEmail(email)) {
            await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email (–Ω–∞–ø—Ä–∏–º–µ—Ä, example@mail.ru):", {
                reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
            });
            return;
        }
        const user = await userService.getUser(ctx.from.id);
        await userService.upsertUser(ctx.from.id, user?.name ?? undefined, email);
        ctx.session.state = "awaiting_complaint";
        await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∂–∞–ª–æ–±—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û –¥–ª—è —Ä–∞—Å—Å–∫–∞–∑–∞ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    if (ctx.session.state === "awaiting_name_for_profession") {
        if (!ctx.from?.id) return;
        userNames[ctx.from.id] = ctx.message.text.trim();
        ctx.session.state = "awaiting_email_for_profession";
        await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email:", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º email –¥–ª—è —Ä–∞—Å—Å–∫–∞–∑–∞ –æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    if (ctx.session.state === "awaiting_email_for_profession") {
        if (!ctx.from?.id) return;
        const email = ctx.message.text.trim();
        if (!isValidEmail(email)) {
            await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email (–Ω–∞–ø—Ä–∏–º–µ—Ä, example@mail.ru):", {
                reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
            });
            return;
        }
        userEmails[ctx.from.id] = email;
        ctx.session.state = "awaiting_profession_story";
        await ctx.reply("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç.", {
            reply_markup: new Keyboard().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∂–∞–ª–æ–±—ã/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    if (ctx.session.state === "awaiting_complaint") {
        if (!ctx.from?.id) {
            await ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à ID. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
            return;
        }
        await complaintService.addComplaint(ctx.from.id, ctx.message.text);
        await ctx.reply(`–í–∞—à–∞ –∂–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ. –°–ø–∞—Å–∏–±–æ!`, { reply_markup: await mainMenu(ctx.session.isAdmin, ctx.from?.id) });
        ctx.session.state = undefined;
        return;
    }

    await next();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å' ‚Äî –≤–æ–∑–≤—Ä–∞—Ç –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
bot.hears("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", async (ctx) => {
    if (!ctx.session.isAdmin) return;
    ctx.session.state = "admin_panel";
    await ctx.reply("–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", { reply_markup: adminPanelMenu() });
});

export const startBot = () => {
    console.log('Bot starting');
    return bot.start();
};

// --- –í–∞–ª–∏–¥–∞—Ü–∏—è email ---
function isValidEmail(email: string): boolean {
    // –ü—Ä–æ—Å—Ç–æ–π, –Ω–æ —Å—Ç—Ä–æ–≥–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω
    return /^[\w.-]+@[\w.-]+\.[a-zA-Z]{2,}$/.test(email.trim());
}