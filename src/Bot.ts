import { Bot, Context, SessionFlavor, session, Keyboard } from 'grammy';
import * as dotenv from "dotenv";
dotenv.config();

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã
import { InlineKeyboard } from "grammy";
import { gigaChatService } from './services/gigachat';
import { collegeSiteService } from './services/college-site';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–ª—è —Å–µ—Å—Å–∏–∏
interface SessionData {
    isAdmin: boolean;
    state?: string;
    tempComplaint?: {
        userId: number;
        text?: string;
        files?: string[];
        date: Date;
        status: "new" | "reviewed" | "closed";
    };
}

// –°–æ–∑–¥–∞–µ–º —Ç–∏–ø –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å —Å–µ—Å—Å–∏–µ–π
type MyContext = Context & SessionFlavor<SessionData>;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!process.env.TELEGRAM_BOT_TOKEN) {
    throw new Error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
}

type FAQ = {
    question: string;
    answer: string;
};

type Complaint = {
    userId: number;
    text: string;
    files?: string[];
    date: Date;
    status: "new" | "reviewed" | "closed";
};

// –ü—Ä–∏–º–µ—Ä –±–∞–∑—ã FAQ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ë–î)
const faqs: FAQ[] = [
    { question: "–ö–∞–∫ –ø–æ–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã?", answer: "–î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å–∞–π—Ç –∫–æ–ª–ª–µ–¥–∂–∞ –∏–ª–∏ –ª–∏—á–Ω–æ –≤ –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏." },
    { question: "–ì–¥–µ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?", answer: "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ –∫–æ–ª–ª–µ–¥–∂–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ '–°—Ç—É–¥–µ–Ω—Ç—É'." },
    // ... –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã
];

// –ü—Ä–∏–º–µ—Ä –±–∞–∑—ã –∂–∞–ª–æ–± (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ë–î)
let complaints: Complaint[] = [
    { userId: 662135656, text: "–ß–∞—Ä–æ–Ω —Å—ã–Ω —à–ª—é—Ö–∏", date: new Date(), status: "new" },
];

// –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Telegram)
const ADMINS = process.env.ADMIN_IDS ? process.env.ADMIN_IDS.split(',').map(Number) : [];

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function mainMenu(isAdmin = false) {
    const kb = new Keyboard()
        .text("üéì –û –∫–æ–ª–ª–µ–¥–∂–µ")
        .text("üìö –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ")
        .row()
        .text("üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç–∞–º")
        .text("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
        .row()
        .text("üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞")
        .row()
        .text("‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
        .text("‚úâÔ∏è –ñ–∞–ª–æ–±–∞/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")
        .row()
        .text("üë®‚Äçüè´ –°–≤—è–∑—å —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º");
    if (isAdmin) kb.row().text("üõ†Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å");
    return kb.resized();
}

// –ê–¥–º–∏–Ω-–º–µ–Ω—é
function adminMenu() {
    return new Keyboard()
        .text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        .text("üìù –ñ–∞–ª–æ–±—ã")
        .row()
        .text("üì¢ –†–∞—Å—Å—ã–ª–∫–∞")
        .text("‚¨ÖÔ∏è –í—ã—Ö–æ–¥")
        .resized();
}

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –±–æ—Ç–∞ —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
const bot = new Bot<MyContext>(process.env.TELEGRAM_BOT_TOKEN);

// –î–æ–±–∞–≤–ª—è–µ–º middleware –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏—è–º–∏
bot.use(session({
    initial: (): SessionData => ({
        isAdmin: false
    })
}));

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
bot.use(async (ctx, next) => {
    if (ctx.from?.id) {
        ctx.session.isAdmin = ADMINS.includes(ctx.from.id);
    }
    await next();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function getAdminKeyboard(): Keyboard {
    return adminMenu();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserKeyboard(): Keyboard {
    return mainMenu(false);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.command('start', async (ctx) => {
    if (ctx.session.isAdmin) {
        await ctx.reply(
            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
            { reply_markup: getAdminKeyboard() }
        );
    } else {
        await ctx.reply(
            '–ü—Ä–∏–≤–µ—Ç! –Ø - –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ö–æ–ª–ª–µ–¥–∂–∞ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞ ‚Ññ11. ' +
            '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å:',
            { reply_markup: getUserKeyboard() }
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.command('help', async (ctx) => {
    if (ctx.session.isAdmin) {
        await ctx.reply(
            '–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏:\n' +
            '/start - –æ—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å\n' +
            '/stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n' +
            '/broadcast - –Ω–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\n' +
            '/complaints - –ø—Ä–æ—Å–º–æ—Ç—Ä –∂–∞–ª–æ–±'
        );
    } else {
        await ctx.reply(
            '–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ö–æ–ª–ª–µ–¥–∂–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞ ‚Ññ11.\n\n' +
            '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞" ' +
            '—á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.',
            { reply_markup: getUserKeyboard() }
        );
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–µ–Ω—é
bot.hears('üéì –û –∫–æ–ª–ª–µ–¥–∂–µ', async (ctx) => {
    if (ctx.session.isAdmin) return;
    await ctx.reply(
        '–ö–æ–ª–ª–µ–¥–∂ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞ ‚Ññ11 - –æ–¥–Ω–æ –∏–∑ –≤–µ–¥—É—â–∏—Ö —É—á–µ–±–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π –ú–æ—Å–∫–≤—ã. ' +
        '–ú—ã –≥–æ—Ç–æ–≤–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ IT, —ç–∫–æ–Ω–æ–º–∏–∫–∏, –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –¥—Ä—É–≥–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π.\n\n' +
        '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å:',
        { reply_markup: getUserKeyboard() }
    );
});

bot.hears('üìö –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ', async (ctx) => {
    if (ctx.session.isAdmin) return;
    await ctx.reply(
        '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏:\n\n' +
        '‚Ä¢ –ü—Ä–∏—ë–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è 20 –∏—é–Ω—è\n' +
        '‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã: –ø–∞—Å–ø–æ—Ä—Ç, –∞—Ç—Ç–µ—Å—Ç–∞—Ç, 4 —Ñ–æ—Ç–æ 3x4\n' +
        '‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ: kp11.mskobr.ru\n\n' +
        '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ "üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞" –∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å',
        { reply_markup: getUserKeyboard() }
    );
});

bot.hears('üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç–∞–º', async (ctx) => {
    if (ctx.session.isAdmin) return;
    await ctx.reply(
        '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:\n\n' +
        '‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π\n' +
        '‚Ä¢ –£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã\n' +
        '‚Ä¢ –ü—Ä–∞–∫—Ç–∏–∫–∞ –∏ —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏\n' +
        '‚Ä¢ –í–Ω–µ—É—á–µ–±–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n\n' +
        '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ "üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞" –∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å',
        { reply_markup: getUserKeyboard() }
    );
});

bot.hears('üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã', async (ctx) => {
    if (ctx.session.isAdmin) return;
    await ctx.reply(
        '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n' +
        'üìç –ê–¥—Ä–µ—Å: [–∞–¥—Ä–µ—Å –∫–æ–ª–ª–µ–¥–∂–∞]\n' +
        'üì± –¢–µ–ª–µ—Ñ–æ–Ω: [—Ç–µ–ª–µ—Ñ–æ–Ω]\n' +
        'üìß Email: [email]\n' +
        'üåê –°–∞–π—Ç: kp11.mskobr.ru\n\n' +
        '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ "üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞" –∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å',
        { reply_markup: getUserKeyboard() }
    );
});

bot.hears('üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞', async (ctx) => {
    if (ctx.session.isAdmin) return;
    ctx.session.state = 'search';
    await ctx.reply(
        '–†–µ–∂–∏–º –ø–æ–∏—Å–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å.\n' +
        '–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É –º–µ–Ω—é.',
        { reply_markup: getUserKeyboard() }
    );
});

// –ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã
bot.command('admin', async (ctx) => {
    if (ctx.session.isAdmin) {
        await ctx.reply('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:', { reply_markup: getAdminKeyboard() });
    }
});

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
bot.hears(["–ú–µ–Ω—é", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é"], async (ctx) => {
    ctx.session.state = undefined;
    await ctx.reply("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", { reply_markup: mainMenu(ctx.session.isAdmin) });
});

// –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
bot.hears("‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", async (ctx) => {
    const kb = new Keyboard();
    faqs.slice(0, 5).forEach(faq => kb.text(faq.question));
    kb.row().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é");
    await ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:", { reply_markup: kb.resized() });
});

// –û—Ç–≤–µ—Ç –Ω–∞ FAQ
bot.hears(faqs.map(f => f.question), async (ctx) => {
    const faq = faqs.find(f => f.question === ctx.message?.text);
    if (faq) {
        await ctx.reply(`–û—Ç–≤–µ—Ç: ${faq.answer}`, { reply_markup: mainMenu(ctx.session.isAdmin) });
    }
});

// –ñ–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
bot.hears("‚úâÔ∏è –ñ–∞–ª–æ–±–∞/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", async (ctx) => {
    ctx.session.state = "awaiting_complaint";
    ctx.session.tempComplaint = { userId: ctx.from?.id ?? 0, date: new Date(), status: "new" };
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∂–∞–ª–æ–±—É –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª –ø–æ—Å–ª–µ —Ç–µ–∫—Å—Ç–∞.");
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message:text", async (ctx, next) => {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∂–∞–ª–æ–±—ã
    if (ctx.session.state === "awaiting_complaint") {
        if (!ctx.session.tempComplaint) {
            ctx.session.tempComplaint = { 
                userId: ctx.from?.id ?? 0, 
                date: new Date(), 
                status: "new" 
            };
        }
        ctx.session.tempComplaint.text = ctx.message.text;
        ctx.session.state = "awaiting_complaint_file";
        await ctx.reply("–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª (—Ñ–æ—Ç–æ/–¥–æ–∫—É–º–µ–Ω—Ç) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ'.", {
            reply_markup: new Keyboard().text("–ì–æ—Ç–æ–≤–æ").row().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
        });
        return;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∞
    if (ctx.session.isAdmin && ctx.session.state === 'awaiting_broadcast') {
        if (ctx.message.text === '‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞') {
            ctx.session.state = undefined;
            await ctx.reply('–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞', { reply_markup: getAdminKeyboard() });
            return;
        }

        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
        await ctx.reply(
            `–°–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–∑–æ—Å–ª–∞–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:\n\n${ctx.message.text}`,
            { reply_markup: getAdminKeyboard() }
        );
        ctx.session.state = undefined;
        return;
    }

    // –ï—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ GigaChat
    if (ctx.session.isAdmin && ctx.session.state) {
        return;
    }

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∏—Å–∫–∞
    if (ctx.session.state === 'search') {
        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç..." —Å—Ç–∞—Ç—É—Å
            await ctx.replyWithChatAction('typing');

            // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç GigaChat
            const response = await gigaChatService.processUserMessage(ctx.message.text);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await ctx.reply(response, { 
                parse_mode: 'HTML',
                reply_markup: getUserKeyboard()
            });
        } catch (error) {
            console.error('Error processing message:', error);
            await ctx.reply(
                '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. ' +
                '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –∫–æ–ª–ª–µ–¥–∂–∞: kp11.mskobr.ru',
                { reply_markup: getUserKeyboard() }
            );
        }
        return;
    }

    // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –±—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –∏–ª–∏ –ø–æ–∏—Å–∫
    const quickResponses: { [key: string]: string } = {
        '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ': '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ –∫–æ–ª–ª–µ–¥–∂–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ "–°—Ç—É–¥–µ–Ω—Ç–∞–º".',
        '–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ': '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ" –Ω–∞ —Å–∞–π—Ç–µ –∫–æ–ª–ª–µ–¥–∂–∞.',
        '–∫–æ–Ω—Ç–∞–∫—Ç—ã': '–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–¥–∂–µ–º –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ email. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.',
        '–¥–æ–∫—É–º–µ–Ω—Ç—ã': '–°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ" –Ω–∞ —Å–∞–π—Ç–µ –∫–æ–ª–ª–µ–¥–∂–∞.',
        '–≥—Ä–∞—Ñ–∏–∫': '–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏:\n–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ø—è—Ç–Ω–∏—Ü–∞: —Å 09:00 –¥–æ 20:00\n–°—É–±–±–æ—Ç–∞: —Å 10:00 –¥–æ 18:00',
        '—Ç–µ–ª–µ—Ñ–æ–Ω': '–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏:\n+7 (499) 150-45-04',
        '–∞–¥—Ä–µ—Å': '–ê–¥—Ä–µ—Å –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏:\n–º. –í–æ–π–∫–æ–≤—Å–∫–∞—è, –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–µ —à–æ—Å—Å–µ –¥.13–ê',
        '–ø—Ä–∏–µ–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è': '–ü—Ä–∏–µ–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è –ö–ü ‚Ññ11:\n\nüìç –ê–¥—Ä–µ—Å: –º. –í–æ–π–∫–æ–≤—Å–∫–∞—è, –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–µ —à–æ—Å—Å–µ –¥.13–ê\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: +7 (499) 150-45-04\n\n‚è∞ –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã:\n–ü–Ω-–ü—Ç: 09:00 - 20:00\n–°–±: 10:00 - 18:00'
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
    const messageLower = ctx.message.text.toLowerCase();
    let hasQuickResponse = false;

    for (const [keyword, response] of Object.entries(quickResponses)) {
        if (messageLower.includes(keyword)) {
            await ctx.reply(response, { reply_markup: getUserKeyboard() });
            hasQuickResponse = true;
            break;
        }
    }

    // –ï—Å–ª–∏ –Ω–µ—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫
    if (!hasQuickResponse) {
        await ctx.reply(
            '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:\n' +
            '1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üîç –ü–æ–∏—Å–∫ –æ—Ç–≤–µ—Ç–∞"\n' +
            '2. –ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ–≤—Ç–æ—Ä–Ω–æ\n\n' +
            '–ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.',
            { reply_markup: getUserKeyboard() }
        );
    }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫ –∂–∞–ª–æ–±–µ
bot.on(["message:photo", "message:document"], async (ctx, next) => {
    if (ctx.session.state === "awaiting_complaint_file") {
        const fileId = ctx.message.photo
            ? ctx.message.photo[ctx.message.photo.length - 1].file_id
            : ctx.message.document?.file_id;
        if (fileId) {
            ctx.session.tempComplaint = {
                ...ctx.session.tempComplaint,
                files: [...(ctx.session.tempComplaint?.files ?? []), fileId]
            };
            await ctx.reply("–§–∞–π–ª –ø–æ–ª—É—á–µ–Ω. –ú–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ'.", {
                reply_markup: new Keyboard().text("–ì–æ—Ç–æ–≤–æ").row().text("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é").resized()
            });
        }
        return;
    }
    await next();
});

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∂–∞–ª–æ–±—ã
bot.hears("–ì–æ—Ç–æ–≤–æ", async (ctx) => {
    if (ctx.session.state === "awaiting_complaint_file" && ctx.session.tempComplaint?.text) {
        complaints.push(ctx.session.tempComplaint as Complaint);
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        for (const adminId of ADMINS) {
            await bot.api.sendMessage(adminId, `–ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:\n${ctx.session.tempComplaint.text}`);
            if (ctx.session.tempComplaint.files) {
                for (const fileId of ctx.session.tempComplaint.files) {
                    await bot.api.sendDocument(adminId, fileId);
                }
            }
        }
        await ctx.reply("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∂–∞–ª–æ–±–∞/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.", { reply_markup: getUserKeyboard() });
        ctx.session.state = undefined;
        ctx.session.tempComplaint = undefined;
    }
});

// –°–≤—è–∑—å —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º
bot.hears("üë®‚Äçüè´ –°–≤—è–∑—å —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º", async (ctx) => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—é –∏–ª–∏ –≤—ã–≤–æ–¥ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    await ctx.reply("–î–ª—è —Å–≤—è–∑–∏ —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞ –ø–æ—á—Ç—É curator@college.edu –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å —á–µ—Ä–µ–∑ —Å–∞–π—Ç –∫–æ–ª–ª–µ–¥–∂–∞.", { reply_markup: getUserKeyboard() });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
bot.hears('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', async (ctx) => {
    if (!ctx.session.isAdmin) return;
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    await ctx.reply(
        'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n' +
        'üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: XXX\n' +
        'üí¨ –°–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è: XXX\n' +
        '‚ùì –í–æ–ø—Ä–æ—Å–æ–≤ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ: XXX\n' +
        '‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: XXX',
        { reply_markup: getAdminKeyboard() }
    );
});

bot.hears('üìù –ñ–∞–ª–æ–±—ã', async (ctx) => {
    if (!ctx.session.isAdmin) return;
    
    let message = 'üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∂–∞–ª–æ–±—ã:\n\n';
    complaints.forEach(complaint => {
        message += `#${complaint.userId}: ${complaint.text}\n`;
        message += `–°—Ç–∞—Ç—É—Å: ${complaint.status}\n–î–∞—Ç–∞: ${complaint.date.toLocaleString()}\n\n`;
    });

    await ctx.reply(message, { reply_markup: getAdminKeyboard() });
});

bot.hears('üì¢ –†–∞—Å—Å—ã–ª–∫–∞', async (ctx) => {
    if (!ctx.session.isAdmin) return;
    
    ctx.session.state = 'awaiting_broadcast';
    await ctx.reply(
        '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:',
        { reply_markup: new Keyboard().text('‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞').resized() }
    );
});

bot.hears('‚¨ÖÔ∏è –í—ã—Ö–æ–¥', async (ctx) => {
    if (!ctx.session.isAdmin) return;
    
    ctx.session.state = undefined;
    await ctx.reply(
        '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏. –¢–µ–ø–µ—Ä—å –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.',
        { reply_markup: getUserKeyboard() }
    );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err) => {
    console.error('Error in bot:', err);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
export async function startBot() {
    try {
        await gigaChatService.initialize();
        console.log('Bot starting...');
        await bot.start();
    } catch (error) {
        console.error('Failed to start bot:', error);
        process.exit(1);
    }
}
